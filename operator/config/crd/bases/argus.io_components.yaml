---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.3
  creationTimestamp: null
  name: components.argus.io
spec:
  group: argus.io
  names:
    kind: Component
    listKind: ComponentList
    plural: components
    singular: component
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.totalControls
      name: Total Controls
      type: integer
    - jsonPath: .status.implementedControls
      name: Implemented Controls
      type: integer
    - jsonPath: .status.runAt
      name: Last Run
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ComponentSpec defines the desired state of Component
            properties:
              classes:
                items:
                  type: string
                type: array
              parents:
                items:
                  type: string
                type: array
              type:
                type: string
            required:
            - classes
            - parents
            - type
            type: object
          status:
            description: ComponentStatus defines the observed state of Component
            properties:
              Controls:
                additionalProperties:
                  properties:
                    implemented:
                      type: boolean
                  required:
                  - implemented
                  type: object
                type: object
              children:
                additionalProperties:
                  description: All parent relationship is flattened. TODO - maybe
                    we want to have the whole hierarchy here? TODO - If the child
                    has a Control the parent does not have (and it is non compliant
                    to that Control) Should the parent be marked as non compliant?
                    Or rather just as having Non compliant Children? TODO - Need a
                    way to check compliance based on Control Classes
                  properties:
                    compliant:
                      type: boolean
                  required:
                  - compliant
                  type: object
                type: object
              compliantChildren:
                default: 0
                type: integer
              implementedControls:
                default: 0
                type: integer
              runAt:
                format: date-time
                type: string
              totalChildren:
                default: 0
                type: integer
              totalControls:
                default: 0
                type: integer
            required:
            - compliantChildren
            - implementedControls
            - totalChildren
            - totalControls
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
